openapi: 3.0.0
info:
  title: Програмна система для контролю зберігання вакцини
  version: 1.0.0

servers:
  - url: http://localhost:3000/

paths:
  /inventories:
    get:
      summary: Отримати всі записи інвентарю
      responses:
        '200':
          description: Список записів інвентарю
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
    post:
      summary: Додати новий запис інвентарю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        '201':
          description: Створений запис інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
  /inventories/{id}:
    get:
      summary: Отримати запис інвентарю за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Запис інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '404':
          description: Inventory not found
    patch:
      summary: Оновити запис інвентарю
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        '200':
          description: Оновлений запис інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      summary: Видалити запис інвентарю за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Запис інвентарю видалено

  /inventoryItems:
    get:
      summary: Отримати всі елементи інвентарю
      responses:
        '200':
          description: Список елементів інвентарю
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
    post:
      summary: Додати новий елемент інвентарю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '201':
          description: Створений елемент інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
  /inventoryItems/{id}:
    get:
      summary: Отримати елемент інвентарю за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Елемент інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Inventory Item not found
    patch:
      summary: Оновити елемент інвентарю
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Оновлений елемент інвентарю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
    delete:
      summary: Видалити елемент інвентарю за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Елемент інвентарю видалено

  /locations:
    get:
      summary: Отримати всі локації
      responses:
        '200':
          description: Список локацій
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      summary: Додати нову локацію
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          description: Створена локація
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /locations/{id}:
    get:
      summary: Отримати локацію за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Локація
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: Location not found
    patch:
      summary: Оновити локацію
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Оновлена локація
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    delete:
      summary: Видалити локацію за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Локація видалена

  /notifications:
    get:
      summary: Отримати всі сповіщення
      responses:
        '200':
          description: Список сповіщень
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
    post:
      summary: Додати нове сповіщення
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '201':
          description: Створене сповіщення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
  /notifications/{id}:
    get:
      summary: Отримати сповіщення за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Сповіщення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '404':
          description: Notification not found
  /vaccines:
    get:
      summary: Отримати всі вакцини
      responses:
        '200':
          description: Список вакцин
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vaccine'
    post:
      summary: Додати нову вакцину
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaccine'
      responses:
        '201':
          description: Створена вакцина
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccine'
  /vaccines/{id}:
    get:
      summary: Отримати вакцину за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Вакцина
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccine'
        '404':
          description: Vaccine not found
    patch:
      summary: Оновити вакцину
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaccine'
      responses:
        '200':
          description: Оновлена вакцина
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccine'
    delete:
      summary: Видалити вакцину за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Вакцина видалена

  /orders:
    get:
      summary: Отримати всі замовлення
      responses:
        '200':
          description: Список замовлень
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Додати нове замовлення
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                order_status:
                  type: string
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderItem'
      responses:
        '201':
          description: Створене замовлення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}:
    get:
      summary: Отримати замовлення за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Замовлення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
    patch:
      summary: Оновити замовлення
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                order_status:
                  type: string
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          description: Оновлене замовлення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Видалити замовлення за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Замовлення видалено

  /sensorData:
    get:
      summary: Отримати всі дані сенсорів
      responses:
        '200':
          description: Список даних сенсорів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorData'
    post:
      summary: Додати нові дані сенсорів
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorData'
      responses:
        '201':
          description: Створені дані сенсорів
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorData'
  /sensorData/{id}:
    get:
      summary: Отримати дані сенсора за ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Дані сенсора
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorData'
        '404':
          description: Sensor Data not found

  /users:
    get:
      summary: Отримати всіх користувачів
      responses:
        '200':
          description: Список користувачів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Додати нового користувача
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Створений користувач
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{username}:
    get:
      summary: Отримати користувача за ім'ям
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Користувач
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    patch:
      summary: Оновити користувача
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Оновлений користувач
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Видалити користувача за ім'ям
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Користувача видалено

components:
  schemas:
    Inventory:
      type: object
      properties:
        inventory_id:
          type: integer
        location_id:
          type: integer
        max_quantity:
          type: integer
      required:
        - location_id
        - max_quantity
    InventoryItem:
      type: object
      properties:
        inventory_item_id:
          type: integer
        inventory_id:
          type: integer
        vaccine_id:
          type: integer
        quantity:
          type: integer
      required:
        - inventory_id
        - vaccine_id
        - quantity
    Location:
      type: object
      properties:
        location_id:
          type: integer
        name:
          type: string
        address:
          type: string
      required:
        - name
        - address
    Notification:
      type: object
      properties:
        notification_id:
          type: integer
        username:
          type: string
        sent_at:
          type: string
          format: date-time
        message:
          type: string
        notification_type:
          type: string
      required:
        - username
        - message
        - notification_type
    Order:
      type: object
      properties:
        order_id:
          type: integer
        username:
          type: string
        order_date:
          type: string
          format: date-time
        order_status:
          type: string
      required:
        - username
    OrderItem:
      type: object
      properties:
        order_item_id:
          type: integer
        order_id:
          type: integer
        vaccine_id:
          type: integer
        quantity:
          type: integer
      required:
        - order_id
        - vaccine_id
        - quantity
    SensorData:
      type: object
      properties:
        sensor_data_id:
          type: integer
        location_id:
          type: integer
        updated_at:
          type: string
          format: date-time
        temperature:
          type: number
          format: float
        humidity:
          type: number
          format: float
    User:
      type: object
      properties:
        username:
          type: string
        role:
          type: string
      required:
        - username
        - role
    Vaccine:
      type: object
      properties:
        vaccine_id:
          type: integer
        name:
          type: string
        description:
          type: string
        min_temperature:
          type: integer
        max_temperature:
          type: integer
        min_humidity:
          type: integer
        max_humidity:
          type: integer
      required:
        - name
